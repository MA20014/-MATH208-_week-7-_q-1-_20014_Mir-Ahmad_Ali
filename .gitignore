from math import nan
from unicodedata import numeric
import pandas as pd
import matplotlib.pyplot as plt

# Define a function to calculate the mean
def calculate_mean(data):
    sum = 0
    for x in data:
        sum+=x
    return sum / len(data)

# Define a function to calculate the variance
def calculate_variance(data):
    mean = calculate_mean(data)
    return sum((x - mean) ** 2 for x in data) / (len(data) - 1)

# Define a function to calculate the standard deviation
def calculate_standard_deviation(data):
    return calculate_variance(data) ** 0.5

# Define a function to calculate the z-scores
def calculate_z_scores(data):
    mean = calculate_mean(data)
    std_dev = calculate_standard_deviation(data)
    return [(x - mean) / std_dev for x in data]

# Define a function to calculate Q1, median (Q2), and Q3
def calculate_quartiles(data):
    
    data_sorted = sorted(data)
    n = len(data_sorted)
    q1_index = n // 4
    print("length",n)
    if n%2 == 0:
        median = (data_sorted[n//2-1] + data_sorted[(n//2)])/2
        print(data_sorted[n//2],data_sorted[(n//2)+1])
    else:
        median = data_sorted[n//2]
    q3_index = (3 * n) // 4
    return data_sorted[q1_index], median, data_sorted[q3_index]

# Read the data from the Excel file
df = pd.read_excel("original_diabetes.xlsx")
df = df.dropna(how="all")
# Extract the "Glucose" and "BloodPressure" columns
glucose_data = df["Glucose"]
blood_pressure_data = df["BloodPressure"]

print(glucose_data)

# Calculate statistics for "Glucose"
glucose_mean = calculate_mean(glucose_data)
glucose_variance = calculate_variance(glucose_data)
glucose_std_dev = calculate_standard_deviation(glucose_data)
glucose_z_scores = calculate_z_scores(glucose_data)
glucose_q1, glucose_median, glucose_q3 = calculate_quartiles(glucose_data)

# Calculate statistics for "BloodPressure"
blood_pressure_mean = calculate_mean(blood_pressure_data)
blood_pressure_variance = calculate_variance(blood_pressure_data)
blood_pressure_std_dev = calculate_standard_deviation(blood_pressure_data)
blood_pressure_z_scores = calculate_z_scores(blood_pressure_data)
blood_pressure_q1, blood_pressure_median, blood_pressure_q3 = calculate_quartiles(blood_pressure_data)

# Print the statistics for "Glucose"
print("Statistics for Glucose:")
print("Mean:", glucose_mean)
print("Variance:", glucose_variance)
print("Standard Deviation:", glucose_std_dev)
print("Z-scores:", glucose_z_scores)
print("Single z score average:", (sum(glucose_z_scores) // len(glucose_data)))
print("Q1:", glucose_q1)
print("Median (Q2):", glucose_median)
print("Q3:", glucose_q3)

# Print the statistics for "BloodPressure"
print("\nStatistics for BloodPressure:")
print("Mean:", blood_pressure_mean)
print("Variance:", blood_pressure_variance)
print("Standard Deviation:", blood_pressure_std_dev)
print("Z-scores:", blood_pressure_z_scores)
print("Single z score average:", (sum(blood_pressure_z_scores) // len(blood_pressure_data)))
print("Q1:", blood_pressure_q1)
print("Median (Q2):", blood_pressure_median)
print("Q3:", blood_pressure_q3)

# Plot boxplots of "Glucose" and "BloodPressure"
plt.boxplot([glucose_data, blood_pressure_data], labels=["Glucose", "BloodPressure"])
plt.title("Boxplots of Glucose and BloodPressure")
plt.xlabel("Variables")
plt.ylabel("Values")
plt.show()
